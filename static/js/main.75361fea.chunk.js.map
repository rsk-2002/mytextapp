{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextFrom","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.75361fea.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};","import React,{useState} from 'react'\r\n\r\nexport default function TextFrom(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to uppercase!\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowercase!\",\"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText ='';\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared!\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    // credits A\r\n    const handleCopy = (event)=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        // text.setSelectionRange(0,9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy to clipboard!\",\"success\");\r\n    }\r\n\r\n    // credits coding wala\r\n    const handleExtraSpaces = (event)=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed Extra spaces!\",\"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container my-5\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'#333030':'white',color:props.mode==='dark'?'white':'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} charactors</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#23133c';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'MyTextApp - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'MyTextApp - Light Mode';\n    }\n  }\n\n\n  return (\n    <>\n        <Navbar title=\"MyTextApp\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <TextForm showAlert={showAlert} heading=\"Enter your text to analyze below\" mode={mode} />\n        </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}